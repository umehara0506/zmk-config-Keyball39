#define DEFAULT 0
#define NUM     2
#define SYM     3
#define FUN     4
#define MOUSE   1
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Spotlight: Spotlight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_COMMAND &kp SPACE>;

            label = "SPOTLIGHT";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "()";
        };

        kakukakko: kakukakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "KAKUKAKKO";
        };

        namikakko: namikakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT_ARROW>;
            label = "NAMIKAKKO";
        };

        testtype: testtype {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp E &kp S &kp T &kp T &kp Y &kp P &kp E>;
            label = "TESTTYPE";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q          &kp W             &kp E             &kp R             &kp T                                         &kp Y        &kp U  &kp I      &kp O       &lt 5 P
&kp A          &kp S             &kp D             &lt 3 F           &kp G                                         &kp H        &kp J  &kp K      &kp L       &kp MINUS
&mt LSHIFT Z   &kp X             &kp C             &lt 4 V           &kp B                                         &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&mt LCTRL ESC  &mt LEFT_ALT TAB  &kp LEFT_COMMAND  &lt 0 LANGUAGE_2  &lt 1 SPACE  &lt 2 LANGUAGE_1  &kp BACKSPACE  &lt 3 ENTER                                &lt 4 DELETE
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION       &kp AT             &kp HASH              &kp DOLLAR     &kp PERCENT                       &kp AMPERSAND  &kp SINGLE_QUOTE  &kakko             &kakukakko        &namikakko
&kp K_MUTE            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &kp LESS_THAN  &kp GREATER_THAN                  &kp CARET      &kp COLON         &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp GRAVE
&kp LG(LS(NUMBER_4))  &kp LG(LS(N5))     &kp LG(LS(NUMBER_6))  &none          &none                             &kp HASH       &kp PIPE          &kp SLASH          &kp UNDERSCORE    &kp NON_US_BACKSLASH
&kp LCTRL             &kp LEFT_ALT       &kp LEFT_COMMAND      &trans         &trans            &trans  &trans  &trans                                                                &none
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp F1                &kp F2        &kp F3        &kp F4        &kp F5                        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp ASTRK
&kp F6                &kp F7        &kp F8        &kp F9        &kp F10                       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &kp SLASH
&kp LG(LS(N5))        &kp ASTERISK  &kp N7        &kp NUMBER_8  &kp NUMBER_9                  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS      &kp EQUAL
&kp LG(LS(NUMBER_4))  &kp SLASH     &kp NUMBER_0  &trans        &trans        &trans  &trans  &trans                                                  &none
            >;
        };

        move {
            label = "move";
            bindings = <
&kp ESCAPE   &none  &none           &none   &none                   &none            &kp LS(LC(TAB))       &none           &kp LC(TAB)            &none
&kp TAB      &none  &kp LEFT_SHIFT  &none   &none                   &none            &kp LG(LEFT_BRACKET)  &kp UP_ARROW    &kp LG(RIGHT_BRACKET)  &none
&kp LS(TAB)  &none  &none           &none   &none                   &kp LG(LA(END))  &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW        &kp HOME
&none        &none  &none           &trans  &trans  &trans  &trans  &trans                                                                        &none
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none  &none           &none           &none            &none                         &none  &none      &none      &none  &none
&none  &none           &kp UP_ARROW    &none            &msc SCRL_UP                  &none  &mkp LCLK  &mkp RCLK  &none  &none
&none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &msc SCRL_DOWN                &none  &none      &none      &none  &none
&none  &none           &none           &none            &none           &none  &none  &none                               &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&bt BT_CLR_ALL  &trans          &trans          &trans           &trans                                    &trans        &trans  &trans          &trans  &trans
&trans          &trans          &msc SCRL_UP    &trans           &none                                     &trans        &trans  &msc SCRL_UP    &trans  &trans
&trans          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans                                    &trans        &trans  &msc SCRL_DOWN  &trans  &trans
&bt BT_CLR      &trans          &trans          &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
